package org.jetbrains.lama.parser

class LamaParserTest : LamaBaseParserTest("parser/correct") {

  fun testALotOfSubtractions() = doTest()
  fun testAssign() = doTest()
  fun testCase() = doTest()
  fun testCaseAt() = doTest()
  fun testCaseListMatch() = doTest()
  fun testCaseMatch() = doTest()
  fun testCaseSharp() = doTest()
  fun testCompareOperators() = doTest()
  fun testComplexArgumentList() = doTest()
  fun testComplexExpression() = doTest()
  fun testDoWhile() = doTest()
  fun testEta() = doTest()
  fun testFor() = doTest()
  fun testForSkip() = doTest()
  fun testFun() = doTest()
  fun testFunFor() = doTest()
  fun testFunIf() = doTest()
  fun testHuge() = doTest()
  fun testIf() = doTest()
  fun testInfixCall() = doTest()
  fun testInfixCallInScope() = doTest()
  fun testInfixDefinition() = doTest()
  fun testInfixr() = doTest()
  fun testLazy() = doTest()
  fun testManyOperators() = doTest()
  fun testMatch() = doTest()
  fun testNestedFun() = doTest()
  fun testNestedIf() = doTest()
  fun testOperatorsInCall() = doTest()
  fun testParenthesisScope() = doTest()
  fun testParenthesisScopeFun() = doTest()
  fun testPrintSExpr() = doTest()
  fun testRecursive() = doTest()
  fun testSeveralExpressions() = doTest()
  fun testSimpleFile() = doTest()
  fun testSyntax() = doTest()
  fun testWhile() = doTest()
  fun testWhileIf() = doTest()
  fun testWhileWhileIf() = doTest()

  private fun doTest() = doTest(true, true)
}