[0] LamaFile:Recursive.lama (var x, m, n;):
0(1) element: null (<no_text>)
1(2) element: LAMA_IDENTIFIER_EXPRESSION (x)
2(3) element: LAMA_VARIABLE_DEFINITION (x)
3(4) element: LAMA_IDENTIFIER_EXPRESSION (m)
4(5) element: LAMA_VARIABLE_DEFINITION (m)
5(6) element: LAMA_IDENTIFIER_EXPRESSION (n)
6(7) element: LAMA_VARIABLE_DEFINITION (n)
7(8) element: LAMA_VARIABLE_DEFINITION_SERIES (var x, m, n;)
8(9) element: LAMA_FUNCTION_DEFINITION (fun ack (m, n) {)
9(10) element: LAMA_ASSIGNMENT_OPERATOR (:=)
10(11) element: LAMA_IDENTIFIER_EXPRESSION (read)
11(12) element: LAMA_ARGUMENT_LIST (())
12(13) element: LAMA_S_OR_CALL_EXPRESSION (read ())
13(14) element: LAMA_IDENTIFIER_EXPRESSION (x)
14(15) element: LAMA_ASSIGNMENT_EXPRESSION (x := read ())
15(16) element: LAMA_SCOPE (m := 0)
16(17) element: LAMA_COMPARE_OPERATOR (<=)
17(18) element: LAMA_IDENTIFIER_EXPRESSION (m)
18(19) element: LAMA_NUMERIC_LITERAL (3)
19(20) element: LAMA_OPERATOR_EXPRESSION (m <= 3)
20(21,22) element: LAMA_EXPRESSION_SERIES (m <= 3)
21(30) element: LAMA_FOR_STATEMENT (for m := 0, m <= 3, m := m+1 do)
22(23) element: LAMA_SCOPE (for n := 0, n <= 8, n := n+1 do    )
23(24) element: LAMA_ASSIGNMENT_OPERATOR (:=)
24(25) element: LAMA_PLUS_MINUS_OPERATOR (+)
25(26) element: LAMA_IDENTIFIER_EXPRESSION (m)
26(27) element: LAMA_NUMERIC_LITERAL (1)
27(28) element: LAMA_OPERATOR_EXPRESSION (m+1)
28(29) element: LAMA_IDENTIFIER_EXPRESSION (m)
29(15) element: LAMA_ASSIGNMENT_EXPRESSION (m := m+1)
30(31) element: LAMA_EXPRESSION_SERIES (x := read ();)
31() element: null (<no_text>)

[1] LAMA_SCOPE (var x, m, n;):
0(1) element: null (<no_text>)
1(2) element: LAMA_IDENTIFIER_EXPRESSION (ack)
2(3) element: LAMA_IDENTIFIER_EXPRESSION (m)
3(4) element: LAMA_S_OR_AT_PATTERN (m)
4(5) element: LAMA_IDENTIFIER_EXPRESSION (n)
5(6) element: LAMA_S_OR_AT_PATTERN (n)
6(7) element: LAMA_PARAMETER_LIST ((m, n))
7(8) element: LAMA_SCOPE (if m == 0 then  (n+1))
8(9) element: LAMA_FUNCTION_BODY ({)
9() element: null (<no_text>)

[2] LAMA_FUNCTION_BODY ({):
0(1) element: null (<no_text>)
1(2) element: LAMA_COMPARE_OPERATOR (==)
2(3) element: LAMA_IDENTIFIER_EXPRESSION (m)
3(4) element: LAMA_NUMERIC_LITERAL (0)
4(5) element: LAMA_OPERATOR_EXPRESSION (m == 0)
5(6,7) element: LAMA_EXPRESSION_SERIES (m == 0)
6(7) element: LAMA_SCOPE ((n+1))
7(8,23) element: LAMA_IF_BRANCH (then  (n+1))
8(9) element: LAMA_AND_OPERATOR (&&)
9(10) element: LAMA_COMPARE_OPERATOR (>)
10(11) element: LAMA_IDENTIFIER_EXPRESSION (m)
11(12) element: LAMA_NUMERIC_LITERAL (0)
12(13) element: LAMA_OPERATOR_EXPRESSION (m > 0)
13(14) element: LAMA_COMPARE_OPERATOR (==)
14(15) element: LAMA_IDENTIFIER_EXPRESSION (n)
15(16) element: LAMA_NUMERIC_LITERAL (0)
16(17) element: LAMA_OPERATOR_EXPRESSION (n == 0)
17(18) element: LAMA_OPERATOR_EXPRESSION (m > 0 && n == 0)
18(19,20) element: LAMA_EXPRESSION_SERIES (m > 0 && n == 0)
19(20) element: LAMA_SCOPE (ack (m-1, 1))
20(21,23) element: LAMA_IF_BRANCH (elif m > 0 && n == 0 then  ack (m-1, 1))
21(22) element: LAMA_SCOPE (ack (m-1, ack (m, n-1)))
22(23) element: LAMA_IF_BRANCH (else  ack (m-1, ack (m, n-1)))
23(24) element: LAMA_IF_STATEMENT (if m == 0 then  (n+1))
24(25) element: LAMA_EXPRESSION_SERIES (if m == 0 then  (n+1))
25() element: null (<no_text>)

[3] LAMA_IF_BRANCH (then  (n+1)):
0(1) element: null (<no_text>)
1(2) element: LAMA_SCOPE (n+1)
2(3) element: LAMA_PARENTHESIZED_EXPRESSION ((n+1))
3(4) element: LAMA_EXPRESSION_SERIES ((n+1))
4() element: null (<no_text>)

[4] LAMA_PARENTHESIZED_EXPRESSION ((n+1)):
0(1) element: null (<no_text>)
1(2) element: LAMA_PLUS_MINUS_OPERATOR (+)
2(3) element: LAMA_IDENTIFIER_EXPRESSION (n)
3(4) element: LAMA_NUMERIC_LITERAL (1)
4(5) element: LAMA_OPERATOR_EXPRESSION (n+1)
5(6) element: LAMA_EXPRESSION_SERIES (n+1)
6() element: null (<no_text>)

[5] LAMA_IF_BRANCH (elif m > 0 && n == 0 then  ack (m-1, 1)):
0(1) element: null (<no_text>)
1(2) element: LAMA_IDENTIFIER_EXPRESSION (ack)
2(3) element: LAMA_PLUS_MINUS_OPERATOR (-)
3(4) element: LAMA_IDENTIFIER_EXPRESSION (m)
4(5) element: LAMA_NUMERIC_LITERAL (1)
5(6) element: LAMA_OPERATOR_EXPRESSION (m-1)
6(7) element: LAMA_EXPRESSION_SERIES (m-1)
7(8) element: LAMA_NUMERIC_LITERAL (1)
8(9) element: LAMA_EXPRESSION_SERIES (1)
9(10) element: LAMA_ARGUMENT_LIST ((m-1, 1))
10(11) element: LAMA_S_OR_CALL_EXPRESSION (ack (m-1, 1))
11(12) element: LAMA_EXPRESSION_SERIES (ack (m-1, 1))
12() element: null (<no_text>)

[6] LAMA_IF_BRANCH (else  ack (m-1, ack (m, n-1))):
0(1) element: null (<no_text>)
1(2) element: LAMA_IDENTIFIER_EXPRESSION (ack)
2(3) element: LAMA_PLUS_MINUS_OPERATOR (-)
3(4) element: LAMA_IDENTIFIER_EXPRESSION (m)
4(5) element: LAMA_NUMERIC_LITERAL (1)
5(6) element: LAMA_OPERATOR_EXPRESSION (m-1)
6(7) element: LAMA_EXPRESSION_SERIES (m-1)
7(8) element: LAMA_IDENTIFIER_EXPRESSION (ack)
8(9) element: LAMA_IDENTIFIER_EXPRESSION (m)
9(10) element: LAMA_S_OR_CALL_EXPRESSION (m)
10(11) element: LAMA_EXPRESSION_SERIES (m)
11(12) element: LAMA_PLUS_MINUS_OPERATOR (-)
12(13) element: LAMA_IDENTIFIER_EXPRESSION (n)
13(14) element: LAMA_NUMERIC_LITERAL (1)
14(15) element: LAMA_OPERATOR_EXPRESSION (n-1)
15(16) element: LAMA_EXPRESSION_SERIES (n-1)
16(17) element: LAMA_ARGUMENT_LIST ((m, n-1))
17(18) element: LAMA_S_OR_CALL_EXPRESSION (ack (m, n-1))
18(19) element: LAMA_EXPRESSION_SERIES (ack (m, n-1))
19(20) element: LAMA_ARGUMENT_LIST ((m-1, ack (m, n-1)))
20(21) element: LAMA_S_OR_CALL_EXPRESSION (ack (m-1, ack (m, n-1)))
21(22) element: LAMA_EXPRESSION_SERIES (ack (m-1, ack (m, n-1)))
22() element: null (<no_text>)

[7] LAMA_FOR_STATEMENT (for m := 0, m <= 3, m := m+1 do):
0(1) element: null (<no_text>)
1(2) element: LAMA_ASSIGNMENT_OPERATOR (:=)
2(3) element: LAMA_NUMERIC_LITERAL (0)
3(4) element: LAMA_IDENTIFIER_EXPRESSION (m)
4(5) element: LAMA_ASSIGNMENT_EXPRESSION (m := 0)
5(6) element: LAMA_EXPRESSION_SERIES (m := 0)
6() element: null (<no_text>)

[8] LAMA_FOR_STATEMENT (for m := 0, m <= 3, m := m+1 do):
0(1) element: null (<no_text>)
1(2) element: LAMA_SCOPE (n := 0)
2(3) element: LAMA_COMPARE_OPERATOR (<=)
3(4) element: LAMA_IDENTIFIER_EXPRESSION (n)
4(5) element: LAMA_NUMERIC_LITERAL (8)
5(6) element: LAMA_OPERATOR_EXPRESSION (n <= 8)
6(7,8) element: LAMA_EXPRESSION_SERIES (n <= 8)
7(16) element: LAMA_FOR_STATEMENT (for n := 0, n <= 8, n := n+1 do    )
8(9) element: LAMA_SCOPE (write (ack (m, n)))
9(10) element: LAMA_ASSIGNMENT_OPERATOR (:=)
10(11) element: LAMA_PLUS_MINUS_OPERATOR (+)
11(12) element: LAMA_IDENTIFIER_EXPRESSION (n)
12(13) element: LAMA_NUMERIC_LITERAL (1)
13(14) element: LAMA_OPERATOR_EXPRESSION (n+1)
14(15) element: LAMA_IDENTIFIER_EXPRESSION (n)
15(1) element: LAMA_ASSIGNMENT_EXPRESSION (n := n+1)
16(17) element: LAMA_EXPRESSION_SERIES (for n := 0, n <= 8, n := n+1 do    )
17() element: null (<no_text>)

[9] LAMA_FOR_STATEMENT (for n := 0, n <= 8, n := n+1 do    ):
0(1) element: null (<no_text>)
1(2) element: LAMA_ASSIGNMENT_OPERATOR (:=)
2(3) element: LAMA_NUMERIC_LITERAL (0)
3(4) element: LAMA_IDENTIFIER_EXPRESSION (n)
4(5) element: LAMA_ASSIGNMENT_EXPRESSION (n := 0)
5(6) element: LAMA_EXPRESSION_SERIES (n := 0)
6() element: null (<no_text>)

[10] LAMA_FOR_STATEMENT (for n := 0, n <= 8, n := n+1 do    ):
0(1) element: null (<no_text>)
1(2) element: LAMA_IDENTIFIER_EXPRESSION (write)
2(3) element: LAMA_IDENTIFIER_EXPRESSION (ack)
3(4) element: LAMA_IDENTIFIER_EXPRESSION (m)
4(5) element: LAMA_S_OR_CALL_EXPRESSION (m)
5(6) element: LAMA_EXPRESSION_SERIES (m)
6(7) element: LAMA_IDENTIFIER_EXPRESSION (n)
7(8) element: LAMA_S_OR_CALL_EXPRESSION (n)
8(9) element: LAMA_EXPRESSION_SERIES (n)
9(10) element: LAMA_ARGUMENT_LIST ((m, n))
10(11) element: LAMA_S_OR_CALL_EXPRESSION (ack (m, n))
11(12) element: LAMA_EXPRESSION_SERIES (ack (m, n))
12(13) element: LAMA_ARGUMENT_LIST ((ack (m, n)))
13(14) element: LAMA_S_OR_CALL_EXPRESSION (write (ack (m, n)))
14(15) element: LAMA_EXPRESSION_SERIES (write (ack (m, n)))
15() element: null (<no_text>)

