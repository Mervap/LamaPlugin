[0] LAMA_SCOPE (fun f (l) {):
0(1) element: null (<no_text>)
1(2) element: LAMA_IDENTIFIER_EXPRESSION (f)
2(3) element: LAMA_IDENTIFIER_EXPRESSION (l)
3(4) element: LAMA_S_OR_AT_PATTERN (l)
4(5) element: LAMA_PARAMETER_LIST ((l))
5(6) element: LAMA_SCOPE (infix === at == (a, b) {)
6(7) element: LAMA_FUNCTION_BODY ({)
7() element: null (<no_text>)

[1] LamaFile:InfixDefinition.lama (fun f (l) {):
0(1) element: null (<no_text>)
1(2) element: LAMA_FUNCTION_DEFINITION (fun f (l) {)
2(3) element: LAMA_IDENTIFIER_EXPRESSION (read)
3(4) element: LAMA_ARGUMENT_LIST (())
4(5) element: LAMA_S_OR_CALL_EXPRESSION (read ())
5(6) element: LAMA_IDENTIFIER_EXPRESSION (x)
6(7) element: LAMA_VARIABLE_DEFINITION (x = read ())
7(8) element: LAMA_VARIABLE_DEFINITION_SERIES (var x = read ();)
8(9) element: LAMA_IDENTIFIER_EXPRESSION (write)
9(10) element: LAMA_IDENTIFIER_EXPRESSION (f)
10(11) element: LAMA_LIST_EXPRESSION ({})
11(12) element: LAMA_EXPRESSION_SERIES ({})
12(13) element: LAMA_ARGUMENT_LIST (({}))
13(14) element: LAMA_S_OR_CALL_EXPRESSION (f ({}))
14(15) element: LAMA_EXPRESSION_SERIES (f ({}))
15(16) element: LAMA_ARGUMENT_LIST ((f ({})))
16(17) element: LAMA_S_OR_CALL_EXPRESSION (write (f ({})))
17(18) element: LAMA_IDENTIFIER_EXPRESSION (write)
18(19) element: LAMA_IDENTIFIER_EXPRESSION (f)
19(20) element: LAMA_LIST_CONS_OPERATOR (:)
20(21) element: LAMA_NUMERIC_LITERAL (1)
21(22) element: LAMA_LIST_EXPRESSION ({})
22(23) element: LAMA_OPERATOR_EXPRESSION (1:{})
23(24) element: LAMA_EXPRESSION_SERIES (1:{})
24(25) element: LAMA_ARGUMENT_LIST ((1:{}))
25(26) element: LAMA_S_OR_CALL_EXPRESSION (f (1:{}))
26(27) element: LAMA_EXPRESSION_SERIES (f (1:{}))
27(28) element: LAMA_ARGUMENT_LIST ((f (1:{})))
28(29) element: LAMA_S_OR_CALL_EXPRESSION (write (f (1:{})))
29(30) element: LAMA_IDENTIFIER_EXPRESSION (write)
30(31) element: LAMA_IDENTIFIER_EXPRESSION (f)
31(32) element: LAMA_NUMERIC_LITERAL (1)
32(33) element: LAMA_EXPRESSION_SERIES (1)
33(34) element: LAMA_NUMERIC_LITERAL (1)
34(35) element: LAMA_EXPRESSION_SERIES (1)
35(36) element: LAMA_LIST_EXPRESSION ({1, 1})
36(37) element: LAMA_EXPRESSION_SERIES ({1, 1})
37(38) element: LAMA_ARGUMENT_LIST (({1, 1}))
38(39) element: LAMA_S_OR_CALL_EXPRESSION (f ({1, 1}))
39(40) element: LAMA_EXPRESSION_SERIES (f ({1, 1}))
40(41) element: LAMA_ARGUMENT_LIST ((f ({1, 1})))
41(42) element: LAMA_S_OR_CALL_EXPRESSION (write (f ({1, 1})))
42(43) element: LAMA_IDENTIFIER_EXPRESSION (write)
43(44) element: LAMA_IDENTIFIER_EXPRESSION (f)
44(45) element: LAMA_NUMERIC_LITERAL (1)
45(46) element: LAMA_EXPRESSION_SERIES (1)
46(47) element: LAMA_NUMERIC_LITERAL (1)
47(48) element: LAMA_EXPRESSION_SERIES (1)
48(49) element: LAMA_NUMERIC_LITERAL (1)
49(50) element: LAMA_EXPRESSION_SERIES (1)
50(51) element: LAMA_LIST_EXPRESSION ({1, 1, 1})
51(52) element: LAMA_EXPRESSION_SERIES ({1, 1, 1})
52(53) element: LAMA_ARGUMENT_LIST (({1, 1, 1}))
53(54) element: LAMA_S_OR_CALL_EXPRESSION (f ({1, 1, 1}))
54(55) element: LAMA_EXPRESSION_SERIES (f ({1, 1, 1}))
55(56) element: LAMA_ARGUMENT_LIST ((f ({1, 1, 1})))
56(57) element: LAMA_S_OR_CALL_EXPRESSION (write (f ({1, 1, 1})))
57(58) element: LAMA_IDENTIFIER_EXPRESSION (write)
58(59) element: LAMA_IDENTIFIER_EXPRESSION (f)
59(60) element: LAMA_NUMERIC_LITERAL (1)
60(61) element: LAMA_EXPRESSION_SERIES (1)
61(62) element: LAMA_NUMERIC_LITERAL (2)
62(63) element: LAMA_EXPRESSION_SERIES (2)
63(64) element: LAMA_NUMERIC_LITERAL (1)
64(65) element: LAMA_EXPRESSION_SERIES (1)
65(66) element: LAMA_LIST_EXPRESSION ({1, 2, 1})
66(67) element: LAMA_EXPRESSION_SERIES ({1, 2, 1})
67(68) element: LAMA_ARGUMENT_LIST (({1, 2, 1}))
68(69) element: LAMA_S_OR_CALL_EXPRESSION (f ({1, 2, 1}))
69(70) element: LAMA_EXPRESSION_SERIES (f ({1, 2, 1}))
70(71) element: LAMA_ARGUMENT_LIST ((f ({1, 2, 1})))
71(72) element: LAMA_S_OR_CALL_EXPRESSION (write (f ({1, 2, 1})))
72(73) element: LAMA_EXPRESSION_SERIES (write (f ({}));)
73() element: null (<no_text>)

[2] LAMA_SCOPE (infix === at == (a, b) {):
0(1) element: null (<no_text>)
1(2) element: LAMA_INFIX_OPERATOR (===)
2(3) element: LAMA_COMPARE_OPERATOR (==)
3(4) element: LAMA_IDENTIFIER_EXPRESSION (a)
4(5) element: LAMA_S_OR_AT_PATTERN (a)
5(6) element: LAMA_IDENTIFIER_EXPRESSION (b)
6(7) element: LAMA_S_OR_AT_PATTERN (b)
7(8) element: LAMA_PARAMETER_LIST ((a, b))
8(9) element: LAMA_SCOPE (a == b)
9(10) element: LAMA_FUNCTION_BODY ({)
10() element: null (<no_text>)

[3] LAMA_FUNCTION_BODY ({):
0(1) element: null (<no_text>)
1(2) element: LAMA_INFIX_OPERATOR_DEFINITION (infix === at == (a, b) {)
2(3) element: LAMA_IDENTIFIER_EXPRESSION (l)
3(4) element: LAMA_S_OR_CALL_EXPRESSION (l)
4(5) element: LAMA_EXPRESSION_SERIES (l)
5(6) element: NULL_PSI_ELEMENT (<Fake element>)
6(7,8) element: LAMA_LIST_PATTERN ({})
7(8) element: LAMA_SCOPE (1)
8(9,24) element: LAMA_CASE_BRANCH ({}         ->  1)
9(10) element: NULL_PSI_ELEMENT (<Fake element>)
10(11) element: LAMA_WILDCARD_PATTERN (_)
11(12,13) element: LAMA_LIST_PATTERN ({_})
12(13) element: LAMA_SCOPE (1)
13(14,24) element: LAMA_CASE_BRANCH (| {_}        ->  1)
14(15) element: NULL_PSI_ELEMENT (<Fake element>)
15(16) element: LAMA_IDENTIFIER_EXPRESSION (a)
16(17) element: LAMA_S_OR_AT_PATTERN (a)
17(18) element: LAMA_IDENTIFIER_EXPRESSION (b)
18(19) element: LAMA_S_OR_AT_PATTERN (b)
19(20) element: LAMA_IDENTIFIER_EXPRESSION (tl)
20(21) element: LAMA_S_OR_AT_PATTERN (tl)
21(22,23) element: LAMA_PATTERN (a : b : tl)
22(23) element: LAMA_SCOPE (a === b && f (b : tl))
23(24) element: LAMA_CASE_BRANCH (| a : b : tl ->  a === b && f (b : tl))
24(25) element: LAMA_CASE_STATEMENT (case l of)
25(26) element: LAMA_EXPRESSION_SERIES (case l of)
26() element: null (<no_text>)

[4] LAMA_FUNCTION_BODY ({):
0(1) element: null (<no_text>)
1(2) element: LAMA_COMPARE_OPERATOR (==)
2(3) element: LAMA_IDENTIFIER_EXPRESSION (a)
3(4) element: LAMA_IDENTIFIER_EXPRESSION (b)
4(5) element: LAMA_S_OR_CALL_EXPRESSION (b)
5(6) element: LAMA_OPERATOR_EXPRESSION (a == b)
6(7) element: LAMA_EXPRESSION_SERIES (a == b)
7() element: null (<no_text>)

[5] LAMA_CASE_BRANCH ({}         ->  1):
0(1) element: null (<no_text>)
1(2) element: LAMA_NUMERIC_LITERAL (1)
2(3) element: LAMA_EXPRESSION_SERIES (1)
3() element: null (<no_text>)

[6] LAMA_CASE_BRANCH (| {_}        ->  1):
0(1) element: null (<no_text>)
1(2) element: LAMA_NUMERIC_LITERAL (1)
2(3) element: LAMA_EXPRESSION_SERIES (1)
3() element: null (<no_text>)

[7] LAMA_CASE_BRANCH (| a : b : tl ->  a === b && f (b : tl)):
0(1) element: null (<no_text>)
1(2) element: LAMA_INFIX_OPERATOR (===)
2(3) element: LAMA_IDENTIFIER_EXPRESSION (a)
3(4) element: LAMA_AND_OPERATOR (&&)
4(5) element: LAMA_IDENTIFIER_EXPRESSION (b)
5(6) element: LAMA_IDENTIFIER_EXPRESSION (f)
6(7) element: LAMA_LIST_CONS_OPERATOR (:)
7(8) element: LAMA_IDENTIFIER_EXPRESSION (b)
8(9) element: LAMA_IDENTIFIER_EXPRESSION (tl)
9(10) element: LAMA_S_OR_CALL_EXPRESSION (tl)
10(11) element: LAMA_OPERATOR_EXPRESSION (b : tl)
11(12) element: LAMA_EXPRESSION_SERIES (b : tl)
12(13) element: LAMA_ARGUMENT_LIST ((b : tl))
13(14) element: LAMA_S_OR_CALL_EXPRESSION (f (b : tl))
14(15) element: LAMA_OPERATOR_EXPRESSION (b && f (b : tl))
15(16) element: LAMA_OPERATOR_EXPRESSION (a === b && f (b : tl))
16(17) element: LAMA_EXPRESSION_SERIES (a === b && f (b : tl))
17() element: null (<no_text>)

