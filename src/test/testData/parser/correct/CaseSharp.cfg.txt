[0] LAMA_SCOPE (fun traverse (l) {):
0(1) element: null (<no_text>)
1(2) element: LAMA_IDENTIFIER_EXPRESSION (traverse)
2(3) element: LAMA_IDENTIFIER_EXPRESSION (l)
3(4) element: LAMA_S_OR_AT_PATTERN (l)
4(5) element: LAMA_PARAMETER_LIST ((l))
5(6) element: LAMA_SCOPE (case l of)
6(7) element: LAMA_FUNCTION_BODY ({)
7() element: null (<no_text>)

[1] LamaFile:CaseSharp.lama (fun traverse (l) {):
0(1) element: null (<no_text>)
1(2) element: LAMA_FUNCTION_DEFINITION (fun traverse (l) {)
2(3) element: LAMA_IDENTIFIER_EXPRESSION (read)
3(4) element: LAMA_ARGUMENT_LIST (())
4(5) element: LAMA_S_OR_CALL_EXPRESSION (read ())
5(6) element: LAMA_IDENTIFIER_EXPRESSION (x)
6(7) element: LAMA_VARIABLE_DEFINITION (x = read ())
7(8) element: LAMA_VARIABLE_DEFINITION_SERIES (var x = read ();)
8(9) element: LAMA_IDENTIFIER_EXPRESSION (traverse)
9(10) element: LAMA_NUMERIC_LITERAL (1)
10(11) element: LAMA_EXPRESSION_SERIES (1)
11(12) element: LAMA_FUNCTION_EXPRESSION (fun () {write(100)})
12(13) element: LAMA_EXPRESSION_SERIES (fun () {write(100)})
13(14) element: LAMA_NUMERIC_LITERAL (2)
14(15) element: LAMA_EXPRESSION_SERIES (2)
15(16) element: LAMA_NUMERIC_LITERAL (3)
16(17) element: LAMA_EXPRESSION_SERIES (3)
17(18) element: LAMA_NUMERIC_LITERAL (4)
18(19) element: LAMA_EXPRESSION_SERIES (4)
19(20) element: LAMA_NUMERIC_LITERAL (5)
20(21) element: LAMA_EXPRESSION_SERIES (5)
21(22) element: LAMA_FUNCTION_EXPRESSION (fun () {write (200)})
22(23) element: LAMA_EXPRESSION_SERIES (fun () {write (200)})
23(24) element: LAMA_NUMERIC_LITERAL (6)
24(25) element: LAMA_EXPRESSION_SERIES (6)
25(26) element: LAMA_NUMERIC_LITERAL (7)
26(27) element: LAMA_EXPRESSION_SERIES (7)
27(28) element: LAMA_LIST_EXPRESSION ({1, fun () {write(100)}, 2, 3, 4, 5, fun () {write (200)}, 6, 7})
28(29) element: LAMA_EXPRESSION_SERIES ({1, fun () {write(100)}, 2, 3, 4, 5, fun () {write (200)}, 6, 7})
29(30) element: LAMA_ARGUMENT_LIST (({1, fun () {write(100)}, 2, 3, 4, 5, fun () {write (200)}, 6, 7}))
30(31) element: LAMA_S_OR_CALL_EXPRESSION (traverse ({1, fun () {write(100)}, 2, 3, 4, 5, fun () {write (200)}, 6, 7}))
31(32) element: LAMA_EXPRESSION_SERIES (traverse ({1, fun () {write(100)}, 2, 3, 4, 5, fun () {write (200)}, 6, 7}))
32() element: null (<no_text>)

[2] LAMA_FUNCTION_BODY ({):
0(1) element: null (<no_text>)
1(2) element: LAMA_IDENTIFIER_EXPRESSION (l)
2(3) element: LAMA_S_OR_CALL_EXPRESSION (l)
3(4) element: LAMA_EXPRESSION_SERIES (l)
4(5) element: NULL_PSI_ELEMENT (<Fake element>)
5(6,7) element: LAMA_LIST_PATTERN ({})
6(7) element: LAMA_SCOPE (skip)
7(8,24) element: LAMA_CASE_BRANCH ({} -> skip)
8(9) element: NULL_PSI_ELEMENT (<Fake element>)
9(10) element: LAMA_IDENTIFIER_EXPRESSION (f)
10(11) element: LAMA_SHARP_PATTERN (#fun)
11(12) element: LAMA_S_OR_AT_PATTERN (f@#fun)
12(13) element: LAMA_IDENTIFIER_EXPRESSION (tl)
13(14) element: LAMA_S_OR_AT_PATTERN (tl)
14(15,16) element: LAMA_PATTERN ((f@#fun) : tl)
15(16) element: LAMA_SCOPE (f (); traverse (tl))
16(17,24) element: LAMA_CASE_BRANCH (| (f@#fun) : tl -> f (); traverse (tl))
17(18) element: NULL_PSI_ELEMENT (<Fake element>)
18(19) element: LAMA_WILDCARD_PATTERN (_)
19(20) element: LAMA_IDENTIFIER_EXPRESSION (tl)
20(21) element: LAMA_S_OR_AT_PATTERN (tl)
21(22,23) element: LAMA_PATTERN (_ : tl)
22(23) element: LAMA_SCOPE (traverse (tl))
23(24) element: LAMA_CASE_BRANCH (| _ : tl -> traverse (tl))
24(25) element: LAMA_CASE_STATEMENT (case l of)
25(26) element: LAMA_EXPRESSION_SERIES (case l of)
26() element: null (<no_text>)

[3] LAMA_CASE_BRANCH ({} -> skip):
0(1) element: null (<no_text>)
1(2) element: LAMA_SKIP_EXPRESSION (skip)
2(3) element: LAMA_EXPRESSION_SERIES (skip)
3() element: null (<no_text>)

[4] LAMA_CASE_BRANCH (| (f@#fun) : tl -> f (); traverse (tl)):
0(1) element: null (<no_text>)
1(2) element: LAMA_IDENTIFIER_EXPRESSION (f)
2(3) element: LAMA_ARGUMENT_LIST (())
3(4) element: LAMA_S_OR_CALL_EXPRESSION (f ())
4(5) element: LAMA_IDENTIFIER_EXPRESSION (traverse)
5(6) element: LAMA_IDENTIFIER_EXPRESSION (tl)
6(7) element: LAMA_S_OR_CALL_EXPRESSION (tl)
7(8) element: LAMA_EXPRESSION_SERIES (tl)
8(9) element: LAMA_ARGUMENT_LIST ((tl))
9(10) element: LAMA_S_OR_CALL_EXPRESSION (traverse (tl))
10(11) element: LAMA_EXPRESSION_SERIES (f (); traverse (tl))
11() element: null (<no_text>)

[5] LAMA_CASE_BRANCH (| _ : tl -> traverse (tl)):
0(1) element: null (<no_text>)
1(2) element: LAMA_IDENTIFIER_EXPRESSION (traverse)
2(3) element: LAMA_IDENTIFIER_EXPRESSION (tl)
3(4) element: LAMA_S_OR_CALL_EXPRESSION (tl)
4(5) element: LAMA_EXPRESSION_SERIES (tl)
5(6) element: LAMA_ARGUMENT_LIST ((tl))
6(7) element: LAMA_S_OR_CALL_EXPRESSION (traverse (tl))
7(8) element: LAMA_EXPRESSION_SERIES (traverse (tl))
8() element: null (<no_text>)

[6] LAMA_EXPRESSION_SERIES (fun () {write(100)}):
0(1) element: null (<no_text>)
1(2) element: LAMA_PARAMETER_LIST (())
2(3) element: LAMA_SCOPE (write(100))
3(4) element: LAMA_FUNCTION_BODY ({write(100)})
4() element: null (<no_text>)

[7] LAMA_FUNCTION_BODY ({write(100)}):
0(1) element: null (<no_text>)
1(2) element: LAMA_IDENTIFIER_EXPRESSION (write)
2(3) element: LAMA_NUMERIC_LITERAL (100)
3(4) element: LAMA_EXPRESSION_SERIES (100)
4(5) element: LAMA_ARGUMENT_LIST ((100))
5(6) element: LAMA_S_OR_CALL_EXPRESSION (write(100))
6(7) element: LAMA_EXPRESSION_SERIES (write(100))
7() element: null (<no_text>)

[8] LAMA_EXPRESSION_SERIES (fun () {write (200)}):
0(1) element: null (<no_text>)
1(2) element: LAMA_PARAMETER_LIST (())
2(3) element: LAMA_SCOPE (write (200))
3(4) element: LAMA_FUNCTION_BODY ({write (200)})
4() element: null (<no_text>)

[9] LAMA_FUNCTION_BODY ({write (200)}):
0(1) element: null (<no_text>)
1(2) element: LAMA_IDENTIFIER_EXPRESSION (write)
2(3) element: LAMA_NUMERIC_LITERAL (200)
3(4) element: LAMA_EXPRESSION_SERIES (200)
4(5) element: LAMA_ARGUMENT_LIST ((200))
5(6) element: LAMA_S_OR_CALL_EXPRESSION (write (200))
6(7) element: LAMA_EXPRESSION_SERIES (write (200))
7() element: null (<no_text>)

