[0] LamaFile:WhileWhileIf.lama (var s, n, p;):
0(1) element: null (<no_text>)
1(2) element: LAMA_IDENTIFIER_EXPRESSION (s)
2(3) element: LAMA_VARIABLE_DEFINITION (s)
3(4) element: LAMA_IDENTIFIER_EXPRESSION (n)
4(5) element: LAMA_VARIABLE_DEFINITION (n)
5(6) element: LAMA_IDENTIFIER_EXPRESSION (p)
6(7) element: LAMA_VARIABLE_DEFINITION (p)
7(8) element: LAMA_VARIABLE_DEFINITION_SERIES (var s, n, p;)
8(9) element: LAMA_ASSIGNMENT_OPERATOR (:=)
9(10) element: LAMA_NUMERIC_LITERAL (0)
10(11) element: LAMA_IDENTIFIER_EXPRESSION (s)
11(12) element: LAMA_ASSIGNMENT_EXPRESSION (s := 0)
12(13) element: LAMA_ASSIGNMENT_OPERATOR (:=)
13(14) element: LAMA_IDENTIFIER_EXPRESSION (read)
14(15) element: LAMA_ARGUMENT_LIST (())
15(16) element: LAMA_S_OR_CALL_EXPRESSION (read ())
16(17) element: LAMA_IDENTIFIER_EXPRESSION (n)
17(18) element: LAMA_ASSIGNMENT_EXPRESSION (n := read ())
18(19) element: LAMA_ASSIGNMENT_OPERATOR (:=)
19(20) element: LAMA_NUMERIC_LITERAL (2)
20(21) element: LAMA_IDENTIFIER_EXPRESSION (p)
21(22) element: LAMA_ASSIGNMENT_EXPRESSION (p := 2)
22(23) element: LAMA_COMPARE_OPERATOR (>)
23(24) element: LAMA_IDENTIFIER_EXPRESSION (n)
24(25) element: LAMA_NUMERIC_LITERAL (0)
25(26,27) element: LAMA_OPERATOR_EXPRESSION (n > 0)
26(28) element: LAMA_WHILE_STATEMENT (while n > 0 do ()
27(21) element: LAMA_SCOPE (()
28(29) element: LAMA_EXPRESSION_SERIES (s := 0;)
29() element: null (<no_text>)

[1] LAMA_WHILE_STATEMENT (while n > 0 do ():
0(1) element: null (<no_text>)
1(2) element: LAMA_SCOPE (var c = 2, f = 1;)
2(3) element: LAMA_PARENTHESIZED_EXPRESSION (()
3(4) element: LAMA_EXPRESSION_SERIES (()
4() element: null (<no_text>)

[2] LAMA_PARENTHESIZED_EXPRESSION (():
0(1) element: null (<no_text>)
1(2) element: LAMA_NUMERIC_LITERAL (2)
2(3) element: LAMA_IDENTIFIER_EXPRESSION (c)
3(4) element: LAMA_VARIABLE_DEFINITION (c = 2)
4(5) element: LAMA_NUMERIC_LITERAL (1)
5(6) element: LAMA_IDENTIFIER_EXPRESSION (f)
6(7) element: LAMA_VARIABLE_DEFINITION (f = 1)
7(8) element: LAMA_VARIABLE_DEFINITION_SERIES (var c = 2, f = 1;)
8(9) element: LAMA_AND_OPERATOR (&&)
9(10) element: LAMA_COMPARE_OPERATOR (<=)
10(11) element: LAMA_MUL_DIV_MOD_OPERATOR (*)
11(12) element: LAMA_IDENTIFIER_EXPRESSION (c)
12(13) element: LAMA_IDENTIFIER_EXPRESSION (c)
13(14) element: LAMA_S_OR_CALL_EXPRESSION (c)
14(15) element: LAMA_OPERATOR_EXPRESSION (c*c)
15(16) element: LAMA_IDENTIFIER_EXPRESSION (p)
16(17) element: LAMA_S_OR_CALL_EXPRESSION (p)
17(18) element: LAMA_OPERATOR_EXPRESSION (c*c <= p)
18(19) element: LAMA_IDENTIFIER_EXPRESSION (f)
19(20) element: LAMA_S_OR_CALL_EXPRESSION (f)
20(21,22) element: LAMA_OPERATOR_EXPRESSION (c*c <= p && f)
21(23) element: LAMA_WHILE_STATEMENT (while c*c <= p && f do)
22(7) element: LAMA_SCOPE (f := (p % c) != 0;)
23(24) element: LAMA_COMPARE_OPERATOR (!=)
24(25) element: LAMA_IDENTIFIER_EXPRESSION (f)
25(26) element: LAMA_NUMERIC_LITERAL (0)
26(27) element: LAMA_OPERATOR_EXPRESSION (f != 0)
27(28,29) element: LAMA_EXPRESSION_SERIES (f != 0)
28(29) element: LAMA_SCOPE (if n == 1 then write (p) else skip fi;)
29(30,32) element: LAMA_IF_BRANCH (then)
30(31) element: LAMA_SCOPE (skip)
31(32) element: LAMA_IF_BRANCH (else skip)
32(33) element: LAMA_IF_STATEMENT (if f != 0 then)
33(34) element: LAMA_ASSIGNMENT_OPERATOR (:=)
34(35) element: LAMA_PLUS_MINUS_OPERATOR (+)
35(36) element: LAMA_IDENTIFIER_EXPRESSION (p)
36(37) element: LAMA_NUMERIC_LITERAL (1)
37(38) element: LAMA_OPERATOR_EXPRESSION (p + 1)
38(39) element: LAMA_IDENTIFIER_EXPRESSION (p)
39(40) element: LAMA_ASSIGNMENT_EXPRESSION (p := p + 1)
40(41) element: LAMA_EXPRESSION_SERIES (while c*c <= p && f do)
41() element: null (<no_text>)

[3] LAMA_WHILE_STATEMENT (while c*c <= p && f do):
0(1) element: null (<no_text>)
1(2) element: LAMA_ASSIGNMENT_OPERATOR (:=)
2(3) element: LAMA_COMPARE_OPERATOR (!=)
3(4) element: LAMA_SCOPE (p % c)
4(5) element: LAMA_PARENTHESIZED_EXPRESSION ((p % c))
5(6) element: LAMA_NUMERIC_LITERAL (0)
6(7) element: LAMA_OPERATOR_EXPRESSION ((p % c) != 0)
7(8) element: LAMA_IDENTIFIER_EXPRESSION (f)
8(9) element: LAMA_ASSIGNMENT_EXPRESSION (f := (p % c) != 0)
9(10) element: LAMA_ASSIGNMENT_OPERATOR (:=)
10(11) element: LAMA_PLUS_MINUS_OPERATOR (+)
11(12) element: LAMA_IDENTIFIER_EXPRESSION (c)
12(13) element: LAMA_NUMERIC_LITERAL (1)
13(14) element: LAMA_OPERATOR_EXPRESSION (c + 1)
14(15) element: LAMA_IDENTIFIER_EXPRESSION (c)
15(16) element: LAMA_ASSIGNMENT_EXPRESSION (c := c + 1)
16(17) element: LAMA_EXPRESSION_SERIES (f := (p % c) != 0;)
17() element: null (<no_text>)

[4] LAMA_PARENTHESIZED_EXPRESSION ((p % c)):
0(1) element: null (<no_text>)
1(2) element: LAMA_MUL_DIV_MOD_OPERATOR (%)
2(3) element: LAMA_IDENTIFIER_EXPRESSION (p)
3(4) element: LAMA_IDENTIFIER_EXPRESSION (c)
4(5) element: LAMA_S_OR_CALL_EXPRESSION (c)
5(6) element: LAMA_OPERATOR_EXPRESSION (p % c)
6(7) element: LAMA_EXPRESSION_SERIES (p % c)
7() element: null (<no_text>)

[5] LAMA_IF_BRANCH (then):
0(1) element: null (<no_text>)
1(2) element: LAMA_COMPARE_OPERATOR (==)
2(3) element: LAMA_IDENTIFIER_EXPRESSION (n)
3(4) element: LAMA_NUMERIC_LITERAL (1)
4(5) element: LAMA_OPERATOR_EXPRESSION (n == 1)
5(6,7) element: LAMA_EXPRESSION_SERIES (n == 1)
6(7) element: LAMA_SCOPE (write (p))
7(8,10) element: LAMA_IF_BRANCH (then write (p))
8(9) element: LAMA_SCOPE (skip)
9(10) element: LAMA_IF_BRANCH (else skip)
10(11) element: LAMA_IF_STATEMENT (if n == 1 then write (p) else skip fi)
11(12) element: LAMA_ASSIGNMENT_OPERATOR (:=)
12(13) element: LAMA_PLUS_MINUS_OPERATOR (-)
13(14) element: LAMA_IDENTIFIER_EXPRESSION (n)
14(15) element: LAMA_NUMERIC_LITERAL (1)
15(16) element: LAMA_OPERATOR_EXPRESSION (n - 1)
16(17) element: LAMA_IDENTIFIER_EXPRESSION (n)
17(18) element: LAMA_ASSIGNMENT_EXPRESSION (n := n - 1)
18(19) element: LAMA_EXPRESSION_SERIES (if n == 1 then write (p) else skip fi;)
19() element: null (<no_text>)

[6] LAMA_IF_BRANCH (then write (p)):
0(1) element: null (<no_text>)
1(2) element: LAMA_IDENTIFIER_EXPRESSION (write)
2(3) element: LAMA_IDENTIFIER_EXPRESSION (p)
3(4) element: LAMA_S_OR_CALL_EXPRESSION (p)
4(5) element: LAMA_EXPRESSION_SERIES (p)
5(6) element: LAMA_ARGUMENT_LIST ((p))
6(7) element: LAMA_S_OR_CALL_EXPRESSION (write (p))
7(8) element: LAMA_EXPRESSION_SERIES (write (p))
8() element: null (<no_text>)

[7] LAMA_IF_BRANCH (else skip):
0(1) element: null (<no_text>)
1(2) element: LAMA_SKIP_EXPRESSION (skip)
2(3) element: LAMA_EXPRESSION_SERIES (skip)
3() element: null (<no_text>)

[8] LAMA_IF_BRANCH (else skip):
0(1) element: null (<no_text>)
1(2) element: LAMA_SKIP_EXPRESSION (skip)
2(3) element: LAMA_EXPRESSION_SERIES (skip)
3() element: null (<no_text>)

